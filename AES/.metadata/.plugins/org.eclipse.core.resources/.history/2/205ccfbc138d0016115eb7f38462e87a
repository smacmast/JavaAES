/**
 * @author Spencer MacMaster
 * @name: AESMain.java
 * @description: Java implementation of FIPS-197 ADVANCED ENCRYPTION STANDARD (AES) Algorithms.
 **/

import java.util.*;

public class AESMain {
	
	/*Entry point of the program*/
	public static void main(String[] args) {
		boolean testing = true; //Only used during development, testing toggled false in final product
		
		if (testing){ 
			int mode; Scanner input = new Scanner(System.in);
			System.out.print("Enter AES Testing mode?(1: Yes, 2:No) "); mode = input.nextInt();
			switch(mode){
				case 1:
					testMode();
					break;
				case 2:
					manualMode();
					break;
				default:
					testMode();
					break;
			}
			input.close(); //close scanner
		}else{
			manualMode();
		}
		
	}
	
	/*Function that allows a user to enter message, key pairs and returns and encrypted / decrypted version*/
	private static void manualMode(){
		Scanner input = new Scanner(System.in);
		int mode; String in = "", key = "";
		System.out.print("Please Select the AES block size to be used(128: AES-128, 192: AES-192, 256: AES-256): ");
		mode = input.nextInt();
		
		AESAlgo aes = new AESAlgo(mode);
		do{
			System.out.print("Please Select Action(1: Encrypt Text, 2: Decrypt Text, 3: Quit): ");
			mode = input.nextInt();
			input.nextLine(); //read newline char
			switch(mode){
				case 1:
					//Text needs encrypted
					System.out.print("Please Enter String to Encrypt: ");
					in = input.nextLine();
					System.out.print("Please Enter Key to be used: ");
					key = input.nextLine();
		
					System.out.println("\nEncrypting Text...");
					in = aes.Encrypt(in, key);
					System.out.println("\nEncrypted Text :\t" + in + "\n");
					break;
				case 2:
					//Text needs decrypted
					System.out.print("Please Enter String to Decrypt: ");
					in = input.nextLine();
					System.out.print("Please Enter Key to be used: ");
					key = input.nextLine();
		
					System.out.println("\nDecrypting Text...");
					in = aes.Encrypt(in, key);
					System.out.println("\nDecrypted Text :\t" + in + "\n");
					break;
				case 3:
					//User wants to end the program
					in = "Quit";
					break;
				default:
					//Invalid Action
					System.out.println("ERROR: Action not recoginized.");
					break;
			}
		}while(!in.equals("Quit"));
		
		input.close();//close scanner
	}
	
	/*Function that tests the AES Algorithms using the text and key values defined in the FIPS-197 Specifications*/
	private static void testMode(){
		String txt = "00112233445566778899aabbccddeeff", key = "000102030405060708090a0b0c0d0e0f", encryptedTxt = "";
		//Test Using block size of 128
		System.out.println("\nPlaintext :\t" + txt);
		System.out.println("Key :\t\t" + key);
		AESAlgo aes = new AESAlgo(128);		
		
		aes.delPad(aes.addPad("01234567"));
		
		System.out.println("AES-128 plaintext :\t\t" + txt);
		encryptedTxt = aes.Encrypt(txt, key);
		System.out.println("AES-128 Encrypted text :\t" + encryptedTxt);
		txt = aes.Decrypt(encryptedTxt, key);
		System.out.println("AES-128 Decrypted text :\t" + txt);
		
		/*
		//Test Using block size of 192;		
		System.out.println("\nPlain text :" + txt);
		System.out.println("Key : " + key);
		aes = new AESAlgo(192); key = key + "1011121314151617";
		
		System.out.println("AES-192 plaintext :\t\t" + txt);
		encryptedTxt = aes.Encrypt(txt, key);
		System.out.println("AES-192 Encrypted text :\t" + encryptedTxt);
		txt = aes.Decrypt(encryptedTxt, key);
		System.out.println("AES-192 Decrypted text :\t" + txt);
		
		//Test Using block size of 256;
		System.out.println("\nPlain text : " + txt);
		System.out.println("Key : " + key);
		aes = new AESAlgo(256); key = key + "18191a1b1c1d1e1f";
		
		System.out.println("AES-256 plaintext :\t\t" + txt);
		encryptedTxt = aes.Encrypt(txt, key);
		System.out.println("AES-256 Encrypted text :\t" + encryptedTxt);
		txt = aes.Decrypt(encryptedTxt, key);
		System.out.println("AES-256 Decrypted text :\t" + txt);
		*/
	}

}
